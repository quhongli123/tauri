name: Build Linux ARM64

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libjavascriptcoregtk-4.0-dev libsoup2.4-dev
      - name: Set PKG_CONFIG_PATH
        run: |
          export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build frontend
        run: pnpm build
      
      - name: Install Tauri CLI
        run: cargo install tauri-cli
      
      - name: Build Linux ARM64 package
        run: |
          cd src-tauri
          # 配置 Cargo 使用交叉编译工具链
          mkdir -p ~/.cargo
          echo '[target.aarch64-unknown-linux-gnu]' > ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml
          # 设置环境变量
          export PKG_CONFIG_ALLOW_CROSS=1
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          # 构建
          cargo tauri build --target aarch64-unknown-linux-gnu
      
      - name: Upload Linux ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-packages
          path: |
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/appimage/*.AppImage 
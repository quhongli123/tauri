name: Build Linux ARM64

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libjavascriptcoregtk-4.0-dev
          
      - name: Configure cross compile environment
        run: |
          sudo mkdir -p /usr/lib/aarch64-linux-gnu/pkgconfig/
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build frontend
        run: pnpm build
        
      - name: Modify tauri.conf.json
        run: |
          # 修改 tauri.conf.json 设置目标格式
          sed -i 's/"targets": "all"/"targets": ["deb"]/' src-tauri/tauri.conf.json
          cat src-tauri/tauri.conf.json
      
      - name: Modify Cargo.toml
        run: |
          # 修改 Cargo.toml 来使用 libsoup 特性
          cd src-tauri
          
          # 备份原始文件
          cp Cargo.toml Cargo.toml.bak
          
          # 检查并添加 libsoup 特性
          if grep -q 'tauri = { version = "2"' Cargo.toml; then
            # 添加 libsoup 特性
            sed -i 's/tauri = { version = "2", features = \[\]/tauri = { version = "2", features = \["libsoup"\]/' Cargo.toml
            # 如果已经有其他特性，则添加 libsoup
            sed -i 's/tauri = { version = "2", features = \["/tauri = { version = "2", features = \["libsoup", "/' Cargo.toml
          fi
          
          # 显示修改后的内容
          cat Cargo.toml
      
      - name: Install Tauri CLI
        run: cargo install tauri-cli
      
      - name: Build Linux ARM64 package
        run: |
          cd src-tauri
          # 配置 Cargo 使用交叉编译工具链
          mkdir -p ~/.cargo
          echo '[target.aarch64-unknown-linux-gnu]' > ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml
          # 设置环境变量
          export PKG_CONFIG_ALLOW_CROSS=1
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          
          # 使用 --verbose 查看更多信息
          cargo tauri build --target aarch64-unknown-linux-gnu --verbose
      
      - name: Upload Linux ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-packages
          path: |
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb 
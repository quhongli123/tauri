name: Build Linux ARM64

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            libjavascriptcoregtk-4.0-dev \
            libsoup-3.0-dev \
            libsoup2.4-dev \
            pkg-config
            
      - name: Set PKG_CONFIG_PATH
        run: |
          # 安装 ARM64 的 libsoup3 库
          sudo apt-get install -y libsoup-3.0-dev:arm64
          # 确保 pkg-config 能找到 ARM64 版本的 .pc 文件
          sudo mkdir -p /usr/lib/aarch64-linux-gnu/pkgconfig/
          # 复制 libsoup-3.0.pc 文件到 ARM64 目录
          sudo cp /usr/lib/x86_64-linux-gnu/pkgconfig/libsoup-3.0.pc /usr/lib/aarch64-linux-gnu/pkgconfig/
          # 设置 PKG_CONFIG_PATH 环境变量
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build frontend
        run: pnpm build
      
      - name: Setup cargo-tauri
        run: cargo install tauri-cli
      
      - name: Build Linux ARM64 package
        run: |
          # 配置交叉编译环境
          mkdir -p ~/.cargo
          echo '[target.aarch64-unknown-linux-gnu]' > ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml
          
          # 设置环境变量
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
          export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
          
          # 打印环境变量以便调试
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          ls -la /usr/lib/aarch64-linux-gnu/pkgconfig/
          
          # 修改 tauri.conf.json 以确保包含 Linux ARM64 目标
          sed -i 's/"targets": "all"/"targets": ["deb", "appimage"]/' src-tauri/tauri.conf.json
          
          # 构建
          cd src-tauri
          cargo tauri build --target aarch64-unknown-linux-gnu --verbose
      
      - name: Upload Linux ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-packages
          path: |
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb
            src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/appimage/*.AppImage 